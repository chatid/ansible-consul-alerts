description "consul-alerts daemon"

start on runlevel [2345]
stop on runlevel [!2345]

setuid {{ consul_alerts_user }}
setgid {{ consul_alerts_user }}

env SLEEP_TIME={{ consul_alerts_respawn_backoff }}

respawn

script
  # Make sure to use all our CPUs, because Consul can block a scheduler thread
  export GOMAXPROCS=`nproc`
  exec consul-alerts start --alert-addr {{ consul_alerts_host }}:{{ consul_alerts_port }} --consul-addr {{ consul_alerts_consul_host }}:{{ consul_alerts_consul_port }} --consul-dc {{ consul_alerts_datacenter }} >> {{ consul_alerts_daemon_log_file }} 2>&1
end script

post-stop script
    goal=`initctl status $UPSTART_JOB | awk '{print $2}' | cut -d '/' -f 1`
    if [ $goal != "stop" ]; then
{% if consul_alerts_respawn_email_recipients %}
        echo "{{ consul_alerts_respawn_email_body }}" | mail -s "{{ consul_alerts_respawn_email_subject" {{ consul_alerts_respawn_email_recipients | join(' ')}}
{% endif %}
        sleep $SLEEP_TIME

        NEW_SLEEP_TIME=`expr {{ consul_alerts_respawn_backoff_factor }} * $SLEEP_TIME`
        if [ $NEW_SLEEP_TIME -ge {{ consul_alerts_respawn_backoff_max }} ]; then
            NEW_SLEEP_TIME={{ consul_alerts_respawn_backoff_max }}
        fi
        initctl set-env SLEEP_TIME=$NEW_SLEEP_TIME
    fi
end script
